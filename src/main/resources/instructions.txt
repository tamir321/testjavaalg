Create a HKube java written algorithm.

1. Create your development project.
   a) Access hkube artifacts.

     Your java maven project will depend on 2 hkube artifacts:
     * io.hkube:java-algo-parent:1.0-SNAPSHOT:pom
     * io.hkube:interfaces:1.0-SNAPSHOT:jar

     hkube artifacts are deployed on maven remote repository.
     Access them by adding "-DremoteRepositories=https://oss.sonatype.org/content/repositories/snapshots"
     to any maven command.



   b) No access to the internet
     If you have no access to the internet in your dev environment, you'll have to download the artifacts from the internet first.

     run:
     mvn dependency:get -Dartifact=io.hkube:java-algo-parent:1.0-SNAPSHOT:pom -DremoteRepositories=https://oss.sonatype.org/content/repositories/snapshots -Ddest=java-algo-parent.xml
     mvn dependency:get -Dartifact=io.hkube:interfaces:1.0-SNAPSHOT:jar -DremoteRepositories=https://oss.sonatype.org/content/repositories/snapshots -Ddest=interfaces.jar

     Then install them in your enclosed environment.

     run:
     mvn org.apache.maven.plugins:maven-install-plugin:3.0.0-M1:install-file  -Dfile=./interfaces.jar -DgroupId=io.hkube -DartifactId=interfaces -Dversion=1.0-SNAPSHOT -Dpackaging=jar
     mvn org.apache.maven.plugins:maven-install-plugin:3.0.0-M1:install-file  -Dfile=./java-algo-parent.xml -DgroupId=io.hkube -DartifactId=java-algo-parent -Dversion=1.0-SNAPSHOT -Dpackaging=pom

   c) pom.xml.
        * Create a java maven project, have the projects pom.xml inherit from io.hkube:java-algo-parent:1.0-SNAPSHOT:pom
             <parent>
                   <artifactId>java-algo-parent</artifactId>
                   <groupId>io.hkube</groupId>
                   <version>1.0-SNAPSHOT</version>
              </parent>

        * Make sure any dependency your project depends on in runtime, is included in pom.xml dependencies list.

    d) Access to private repository
        The sources of the projects you create , will later be deployed to hkube. "maven package" command will be ran on your project inside hkubes kubernetis cluster. You can overwrite the settings.xml used by hkubes maven, by placeing your own settings.xml under the projects maven resource folder.
        kubernetis Secrets values of maven_user and maven_token, can be accessed in the settings file as follows:

           <servers>
                <server>
                    <id>private_repo</id>
                    <username>${PACKAGES_REGISTRY_USER}</username>
                    <password>${PACKAGES_TOKEN}</password>
                </server>
            </servers>

       ( maven_user -> PACKAGES_REGISTRY_USER
        maven_token -> PACKAGES_TOKEN )

    d) Algorithm implementation
     Write a class implementing hkube.algo.wrapper.IAlgorithm that will invoke your code algorithm from "start" its method.
     This class must be included in your project source or as part of one of the projects dependencies.



2. Deploy your artifact to hkube.

    A new algorithm can be created and registered from code via hkube UI or rest api.
    1. If created from a git repository - make sure the repository root is the root of the java maven project created as described in 1.c.
    2. If created from an archived project - you can use maven assembly plugin to create the archive, as used in algorithm-example

    When deploying the algorithm, attributes are set in the New Algorithm ui form, or the rest request payload.
    Make sure the following attributes are set as follows:
    1. "env" to "java"
    2. "entryPoint" to the fully qualified name of your class implementing IAlgorithm.


